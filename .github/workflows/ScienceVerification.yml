name: ScienceVerification
on: push

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # macos-latest --> gfortran not working on osx yet
        python-version: [3.9]
        julia-version: [1.8.1]
        gcc_v: [9] # Version of GFortran we want to use.
        arch: ['x64']
    env:
      FC: gfortran-${{ matrix.gcc_v }}
      GCC_V: ${{ matrix.gcc_v }}       

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}    
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout grok
      uses: actions/checkout@v3
      with: 
        repository: andycasey/grok
      
    - name: Install grok
      run: |
        pip install -r requirements.txt
        python setup.py install

#    - name: Install GFortran Linux
#      if: contains(matrix.os, 'ubuntu')
#      run: |
#        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
#        sudo apt-get update
#        sudo apt-get install -y gcc-${GCC_V} gfortran-${GCC_V}
#        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
#        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V} \
#        --slave /usr/bingcov gcov /usr/bin/gcov-${GCC_V}
#
#    - name: Install GFortran macOS
#      if: contains(matrix.os, 'macos')
#      run: brew install gcc@${GCC_V} || brew upgrade gcc@${GCC_V} || true
#
#    - name: Checkout Turbospectrum
#      uses: actions/checkout@v3
#      with:
#        repository: bertrandplez/Turbospectrum2019
#    
#    - name: Compile Turbospectrum
#      run: |
#        pwd
#        cd exec-gf-v19.1
#        make
#        ./bsyn_lu
#
#
#    - name: Checkout MOOGSILENT
#      uses: actions/checkout@v3
#      with: 
#        repository: andycasey/moog17scat
#        
#    - name: Compile MOOGSILENT
#      run: |
#        pwd
#        ls
#        make -f Makefile.gh
#
    - name: Set up Julia ${{ matrix.julia-version }}
      uses: julia-actions/setup-julia@v1
      with:
        version: ${{ matrix.julia-version }}
        arch: ${{ matrix.arch }}
        show-versioninfo: false

    - name: whaa
      run: |
        echo ${{ github.repository }}

    - name: Checkout Korg
      uses: actions/checkout@v3
      with:
        # We checkout *this* repository because if it's a pull request
        # then it may have new data/methods, etc. Then we should use
        # *this* repository to install the package, instead of getting
        # it from the Julia repository.
        # And we should be even more specific if this action is being initiated on
        # a branch other than master!! # TODO
        # TODO: ${{ github.action_repository }} does not work!
        repository: andycasey/Korg.jl
    
    - name: Install Korg
      run: |
        julia -e 'using Pkg; Pkg.add("Korg")'
    
    - name: Sanity check
      run: |
        echo ${{ github.workspace }}
        ls ${{ github.workspace }}/test/
        ls ${{ github.workspace }}/test/ScienceVerification/
        
    - name: Run grok on Sol
      run: |
        cd ${{ github.workspace }}/test/ScienceVerification/
        grok Sol-3660-3680.yml

    - name: Summary
      run: |
        echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY
